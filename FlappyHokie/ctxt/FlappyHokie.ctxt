#BlueJ class context
comment0.params=
comment0.target=FlappyHokie()
comment0.text=\r\n\ Creates\ a\ new\ FlappyHokie\ object.\r\n
comment1.params=
comment1.target=void\ act()
comment1.text=\r\n\ If\ a\ FlappyHokie\ hits\ a\ pipe,\ the\ top\ edge,\ or\ the\ bottom\r\n\ edge\ of\ the\ world,\ it\ removes\ itself\ from\ the\ world\ and\r\n\ the\ game\ is\ lost.\ Otherwise,\ the\ FlappyHokie\ wrapsAround\r\n\ the\ world\ and\ flaps\ at\ the\ given\ speed.\r\n
comment10.params=j
comment10.target=void\ flap(int)
comment10.text=\r\n\ Move\ up\ j\ cells\ one\ cell\ at\ a\ time.\r\n\ @param\ j\ number\ of\ cells\r\n
comment11.params=
comment11.target=void\ reset()
comment11.text=\r\n\ Remove\ scoreboard\ and\ pipes,\ update\ them,\ and\ then\ place\r\n\ them\ back\ into\ the\ world.\r\n
comment12.params=
comment12.target=void\ wrapAround()
comment12.text=\r\n\ This\ is\ a\ base\ method\ that\ will\ be\ overwritten\ in\ the\r\n\ subclasses\ to\ make\ more\ sense.\ Right\ now\ it\ simply\r\n\ updates\ the\ score\ and\ resets\ the\ world\ with\ random\ pipes.\r\n
comment2.params=
comment2.target=int\ getSpeed()
comment2.text=\r\n\ Get\ the\ value\ of\ speed.\r\n\ @return\ speed.\r\n
comment3.params=s
comment3.target=void\ setSpeed(int)
comment3.text=\r\n\ Changes\ the\ value\ of\ speed.\r\n\ @param\ s\ new\ speed\r\n
comment4.params=
comment4.target=boolean\ getFlapping()
comment4.text=\r\n\ Get\ the\ value\ of\ isFlapping.\r\n\ @return\ true\ or\ false.\r\n
comment5.params=t
comment5.target=void\ setFlapping(boolean)
comment5.text=\r\n\ Changes\ the\ status\ of\ isFlapping.\r\n\ @param\ t\ true\ or\ false\r\n
comment6.params=
comment6.target=int\ getVertical()
comment6.text=\r\n\ Get\ the\ height\ of\ the\ FlappyHokie.\r\n\ @return\ This\ FlappyHokie's\ height.\r\n
comment7.params=h
comment7.target=void\ setVertical(int)
comment7.text=\r\n\ Set\ the\ height\ of\ the\ FlappyHokie.\r\n\ @param\ h\ new\ value\ for\ height.\r\n
comment8.params=
comment8.target=int\ getPoints()
comment8.text=\r\n\ Get\ the\ points\ of\ the\ FlappyHokie.\r\n\ @return\ This\ FlappyHokie's\ points.\r\n
comment9.params=p
comment9.target=void\ setPoints(int)
comment9.text=\r\n\ Set\ the\ points\ of\ the\ FlappyHokie.\r\n\ @param\ p\ new\ value\ for\ points.\r\n
numComments=13
